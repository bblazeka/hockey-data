type TTeamAnalysis = {
  id: number;
  leagueRecord: {
    wins: number;
    losses: number;
    ot: number;
    type: string;
  };
  regulationWins: number;
  team?: TTeam;
  divisionL10Rank: number;
  divisionRank: number;
  lastUpdated: string;
  leagueL10Rank: number;
  leagueRank: number;
  points: number;
  row: number;
  regularSeasonStatRankings: TRegularSeasonStatRankings;
  statsSingleSeason: TStatsSingleSeason;
  conferenceHomeRank: number;
  conferenceL10Rank: number;
  conferenceRank: number;
  conferenceRoadRank: number;
  divisionHomeRank: number;
  divisionRoadRank: number;
  leagueHomeRank: number;
  leagueRoadRank: number;
  ppConferenceRank: number;
  ppDivisionRank: number;
  ppLeagueRank: number;
  rosterStats: TPlayerStats[];
  skaterStats?: TPlayerStats[];
  goalieStats?: TPlayerStats[];
};

type TRegularSeasonStatRankings = {
  wins: number;
  losses: number;
  ot: number;
  pts: number;
  ptPctg: number;
  goalsPerGame: number;
  goalsAgainstPerGame: number;
  evGGARatio: number;
  powerPlayPercentage: number;
  powerPlayGoals: number;
  powerPlayGoalsAgainst: number;
  powerPlayOpportunities: number;
  penaltyKillOpportunities: number;
  penaltyKillPercentage: number;
  shotsPerGame: number;
  shotsAllowed: number;
  winScoreFirst: number;
  winOppScoreFirst: number;
  winLeadFirstPer: number;
  winLeadSecondPer: number;
  winOutshootOpp: number;
  winOutshotByOpp: number;
  faceOffsTaken: number;
  faceOffsWon: number;
  faceOffsLost: number;
  faceOffWinPercentage: number;
  savePctRank: number;
  shootingPctRank: number;
};

type TStatsSingleSeason = {
  gamesPlayed: number;
  wins: number;
  losses: number;
  ot: number;
  pts: number;
  ptPctg: number;
  goalsPerGame: number;
  goalsAgainstPerGame: number;
  evGGARatio: number;
  powerPlayPercentage: number;
  powerPlayGoals: number;
  powerPlayGoalsAgainst: number;
  powerPlayOpportunities: number;
  penaltyKillPercentage: string;
  shotsPerGame: number;
  shotsAllowed: number;
  winScoreFirst: number;
  winOppScoreFirst: number;
  winLeadFirstPer: number;
  winLeadSecondPer: number;
  winOutshootOpp: number;
  winOutshotByOpp: number;
  faceOffsTaken: number;
  faceOffsWon: number;
  faceOffsLost: number;
  faceOffWinPercentage: string;
  shootingPctg: number;
  savePctg: number;
};

type TPlayerStats = {
  id: number;
  abbrName: string;
  fullName: string;
  currentAge: number;
  stats: TStats;
  advancedStats: TAdvancedStats;
};

type TAdvancedStats = {
  playerId: number;
  lastName?: string;
  seasonId: number;
  gamesPlayed: number;
  teamAbbrevs?: string;
} & TSkaterAdvancedStats &
  TGoalieAdvancedStats;

type TSkaterAdvancedStats = {
  assists5v5?: number;
  assistsPer605v5?: number;
  goals5v5?: number;
  goalsPer605v5?: number;
  netMinorPenaltiesPer60?: number;
  offensiveZoneStartPct5v5?: number;
  onIceShootingPct5v5?: number;
  points5v5?: number;
  pointsPer605v5?: number;
  positionCode?: string;
  primaryAssists5v5?: number;
  primaryAssistsPer605v5?: number;
  satPct?: number;
  satRelative5v5?: number;
  secondaryAssists5v5?: number;
  secondaryAssistsPer605v5?: number;
  shootingPct5v5?: number;
  skaterFullName?: string;
  timeOnIcePerGame5v5?: number;
  ppAssists?: number;
  ppGoals?: number;
  ppGoalsForPer60?: number;
  ppGoalsPer60?: number;
  ppIndividualSatFor?: number;
  ppIndividualSatForPer60?: number;
  ppPoints?: number;
  ppPointsPer60?: number;
  ppPrimaryAssists?: number;
  ppPrimaryAssistsPer60?: number;
  ppSecondaryAssists?: number;
  ppSecondaryAssistsPer60?: number;
  ppShootingPct?: number;
  ppShots?: number;
  ppShotsPer60?: number;
  ppTimeOnIce?: number;
  ppTimeOnIcePctPerGame?: number;
  ppTimeOnIcePerGame?: number;
};

type TGoalieAdvancedStats = {
  completeGamePct?: number;
  completeGames?: number;
  gamesStarted?: number;
  goalieFullName?: string;
  goalsAgainst?: number;
  goalsAgainstAverage?: number;
  goalsFor?: number;
  goalsForAverage?: number;
  incompleteGames?: number;
  qualityStart?: number;
  qualityStartsPct?: number;
  regulationLosses?: number;
  regulationWins?: number;
  savePct?: number;
  shootsCatches?: string;
  shotsAgainstPer60?: number;
  timeOnIce?: number;
};
